---
- name: Fetch stable version string from upstream
  uri:
    url: "{{ kubectl_download_base }}/stable.txt"
    return_content: yes
  register: stable_txt
  changed_when: false

- name: Determine actual kubectl version
  set_fact:
    kubectl_target: >-
      {{ (stable_txt.content.split('\n')[0] if kubectl_version == 'stable'
         else kubectl_version
        ) }}

- name: Download kubectl binary
  get_url:
    url: "{{ kubectl_download_base }}/{{ kubectl_target }}/bin/linux/{{ kubectl_arch }}/kubectl"
    dest: "{{ kubectl_dest }}/kubectl-{{ kubectl_target }}"
    mode: '0755'
    checksum: "sha256:{{ lookup('url', kubectl_download_base + '/' + kubectl_target + '/bin/linux/' + kubectl_arch + '/kubectl.sha256', wantlist=False) }}"
  become: yes
  register: kubectl_download

- name: Symlink kubectl â†’ target version
  file:
    src: "{{ kubectl_dest }}/kubectl-{{ kubectl_target }}"
    dest: "{{ kubectl_dest }}/kubectl"
    state: link
    force: yes
  become: yes
  when: kubectl_download.changed

- name: Verify kubectl version
  command: "{{ kubectl_dest }}/kubectl version --client"
  register: kubectl_version_check
  changed_when: false

- name: Show installed kubectl version
  debug:
    msg: "{{ kubectl_version_check.stdout }}"

